# Copyright 2022 CeresDB Project Authors. Licensed under Apache-2.0.

name: Rust

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'docs/**'
      - 'etc/**'
      - '**.md'
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'docs/**'
      - 'etc/**'
      - '**.md'

env:
  CARGO_TERM_COLOR: always

jobs:
  # build the library, a compilation step used by multiple steps below
  linux-build-lib:
    name: Build Libraries with Rust ${{ matrix.rust }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [1.59.0]
    container:
      image: rust:${{ matrix.rust }}-slim-bullseye
      env:
        # Disable full debug symbol generation to speed up CI build and keep memory down
        # "1" means line tables only, which is useful for panic tracebacks.
        RUSTFLAGS: "-C debuginfo=1"
    steps:
      - uses: actions/checkout@v3
        # with:
        #   submodules: true
      - name: Cache Cargo
        uses: actions/cache@v3
        with:
          path: /github/home/.cargo
          key: cargo-cache-
      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: /github/home/target
          key: ${{ runner.os }}-target-cache-${{ matrix.rust }}-
      - name: Cache Build Dependencies
        uses: actions/cache@v3
        with:
          path: /github/home
          key: ${{ runner.os }}-toolchain-cache-
      - name: Setup Build Environment
        run: |
          apt update
          apt install --yes gcc g++ libssl-dev pkg-config cmake 
          rm -rf /var/lib/apt/lists/*
      - name: Build workspace in debug mode
        run: |
          make build-ut
        env:
          CARGO_HOME: "/github/home/.cargo"
          CARGO_TARGET_DIR: "/github/home/target/debug"

  style-check:
    name: Libraries Style Check
    needs: [linux-build-lib]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [1.59.0]
    container:
      image: rust:${{ matrix.rust }}-slim-bullseye
    steps:
      - uses: actions/checkout@v3
      - name: Setup Build Environment
        run: |
          apt update
          apt install --yes cmake 
          rm -rf /var/lib/apt/lists/*
      - name: Setup Toolchain
        run: |
          rustup component add rustfmt
      - name: Run
        run: |
          make fmt
        env:
          CARGO_HOME: "/github/home/.cargo"
          CARGO_TARGET_DIR: "/github/home/target/debug"

  clippy:
    name: Clippy
    needs: [linux-build-lib]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [1.59.0]
    container:
      image: rust:${{ matrix.rust }}-slim-bullseye
      env:
        RUSTFLAGS: "-C debuginfo=1"
    steps:
      - uses: actions/checkout@v3
        # with:
        #   submodules: true
      - name: Cache Cargo
        uses: actions/cache@v3
        with:
          path: /github/home/.cargo
          key: cargo-cache-
      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: /github/home/target
          key: ${{ runner.os }}-target-cache-${{ matrix.rust }}-
      - name: Cache Build Dependencies
        uses: actions/cache@v3
        with:
          path: /github/home
          key: ${{ runner.os }}-toolchain-cache-
      - name: Setup Build Environment
        run: |
          apt update
          apt install --yes gcc g++ libssl-dev pkg-config cmake 
          rm -rf /var/lib/apt/lists/*
      - name: Install Clippy
        run: |
          rustup component add clippy
      - name: Run Clippy
        run: |
          make clippy
        env:
          CARGO_HOME: "/github/home/.cargo"
          CARGO_TARGET_DIR: "/github/home/target/debug"

  linux-test:
    name: Test Workspace with Rust ${{ matrix.rust }}
    needs: [linux-build-lib]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [1.59.0]
    container:
      image: rust:${{ matrix.rust }}-slim-bullseye
      env:
        RUSTFLAGS: "-C debuginfo=1"
    steps:
      - uses: actions/checkout@v3
        # with:
        #   submodule: true
      - name: Cache Cargo
        uses: actions/cache@v3
        with:
          path: /github/home/.cargo
          key: cargo-cache-
      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: /github/home/target
          key: ${{ runner.os }}-target-cache-${{ matrix.rust }}-
      - name: Cache Build Dependencies
        uses: actions/cache@v3
        with:
          path: /github/home
          key: ${{ runner.os }}-toolchain-cache-
      - name: Setup Build Environment
        run: |
          apt update
          apt install --yes gcc g++ libssl-dev pkg-config cmake git
      - name: Run Tests
        run: |
          git clone https://github.com/apache/parquet-testing.git components/parquet-testing
          make test-ut
        env:
          CARGO_HOME: "/github/home/.cargo"
          CARGO_TARGET_DIR: "/github/home/target/debug"
          RUST_BACKTRACE: "1"